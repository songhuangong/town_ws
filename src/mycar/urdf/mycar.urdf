<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mycar.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mycar">
  <!-- Init colour -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 0.5"/>
  </material>
  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- 地平面的位置   -->
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.00001 0.00001 0.00001"/>
      </geometry>
    </visual>
  </link>
  <!-- 地盘重量 -->
  <!-- base link 小车中心的位置-->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <!-- <cylinder length="0.12" radius="0.10"/> -->
        <box size="1.21 0.738 0.35"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <!-- <cylinder length="0.12" radius="0.10"/> -->
        <box size="1.21 0.738 0.35"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.06610833333333334" ixy="0" ixz="0" iyy="0.08369766666666667" iyz="0" izz="0.027797666666666665"/>
    </inertial>
  </link>
  <!-- 使小车距离地面上方0.05M -->
  <joint name="link2footprint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <!-- （base_link距离base_footprint的位置） =  车身一半高度（0.05） + 离地距离（0.05） -->
    <origin xyz="0 0 0.20299999999999999"/>
  </joint>
  <link name="left_wheel">
    <visual>
      <!-- x方向翻转1.57.8弧度，及90度 -->
      <origin rpy="1.5708 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="1.5708 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00028000000000000003" ixy="0" ixz="0" iyy="0.00028000000000000003" iyz="0" izz="0.0005000000000000001"/>
    </inertial>
  </link>
  <joint name="left2link" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 0.33 -0.10299999999999998"/>
    <!-- 绕Y轴转动 -->
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_wheel">
    <visual>
      <!-- x方向翻转1.57.8弧度，及90度 -->
      <origin rpy="1.5708 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.1"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="1.5708 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00028000000000000003" ixy="0" ixz="0" iyy="0.00028000000000000003" iyz="0" izz="0.0005000000000000001"/>
    </inertial>
  </link>
  <joint name="right2link" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 -0.33 -0.10299999999999998"/>
    <!-- 绕Y轴转动 -->
    <axis xyz="0 1 0"/>
  </joint>
  <link name="wheel3">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- <geometry>
                    <cylinder radius="${sub_wheel_radius}" length="${sub_wheel_length}"></cylinder>
                </geometry> -->
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="light_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00010000000000000002" ixy="0" ixz="0" iyy="0.00010000000000000002" iyz="0" izz="0.00010000000000000002"/>
    </inertial>
  </link>
  <joint name="wheel3_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel3"/>
    <!-- 左上 -->
    <!-- <xacro:if value="${pos == 'q'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 右上 -->
    <!-- <xacro:if value="${pos == 'e'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 左下 -->
    <!-- <xacro:if value="${pos == 'z'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 右下 -->
    <!-- <xacro:if value="${pos == 'c'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <origin xyz="0.503 0 -0.15299999999999997"/>
    <axis xyz="0 1 1"/>
  </joint>
  <link name="wheel4">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- <geometry>
                    <cylinder radius="${sub_wheel_radius}" length="${sub_wheel_length}"></cylinder>
                </geometry> -->
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="light_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00010000000000000002" ixy="0" ixz="0" iyy="0.00010000000000000002" iyz="0" izz="0.00010000000000000002"/>
    </inertial>
  </link>
  <joint name="wheel4_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel4"/>
    <!-- 左上 -->
    <!-- <xacro:if value="${pos == 'q'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 右上 -->
    <!-- <xacro:if value="${pos == 'e'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 左下 -->
    <!-- <xacro:if value="${pos == 'z'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <!-- 右下 -->
    <!-- <xacro:if value="${pos == 'c'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
    <origin xyz="-0.503 0 -0.15299999999999997"/>
    <axis xyz="0 1 1"/>
  </joint>
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <link name="laser_link1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="laser_joint1" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link1"/>
    <origin xyz="0.605 0.369 0.175"/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <link name="laser_link2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="laser_joint2" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link2"/>
    <origin xyz="-0.605 -0.369 0.175"/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <gazebo reference="laser_link1">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="laser_link2">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="laser_link1">
    <sensor name="laser_sensor" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <pose>-0.032 0 0.171 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <!-- 激光雷达扫描参数设置 -->
        <scan>
          <horizontal>
            <!-- 360条光束（扫描密度） -->
            <samples>360</samples>
            <!-- 采样,每n条光束有一条测量距离，为了减轻仿真压力 -->
            <resolution>1</resolution>
            <!-- 扫描范围，单位弧度 -->
            <min_angle>-1.5707963267948966</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
        </scan>
        <!-- 雷达检测范围和精度 -->
        <range>
          <!-- 10厘米以内的探测不到 -->
          <min>0.100000</min>
          <!-- 5米之外的探测不到 -->
          <max>5.0</max>
          <!-- 探测精度为1厘米 -->
          <resolution>0.01</resolution>
        </range>
        <!-- 添加高斯噪音（贴近真实的环境） -->
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laserscan">
        <ros>
          <!-- <namespace>/tb3</namespace> -->
          <!-- 话题发布 -->
          <remapping>~/out:=/scan</remapping>
        </ros>
        <!-- 雷达消息类型 -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <!-- 关联到哪个link -->
        <frame_name>laser_link1</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.00016666666666666672" ixy="0" ixz="0" iyy="0.00016666666666666672" iyz="0" izz="0.00016666666666666672"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01"/>
  </joint>
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/demo</namespace>
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <!-- 摄像头安装的z坐标:底盘高度 / 2 + 摄像头高度 / 2  -->
  <!-- 摄像头质量 -->
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.025 0.025"/>
      </geometry>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.025 0.025"/>
      </geometry>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="6.041666666666668e-07" ixy="0" ixz="0" iyy="6.041666666666668e-07" iyz="0" izz="1.041666666666667e-06"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.605 0.0 0.017000000000000015"/>
  </joint>
  <gazebo reference="camera_link">
    <sensor name="camera_sensor" type="depth">
      <!-- Set always_on only sensor, not on plugin -->
      <always_on>0</always_on>
      <!-- Set update_rate only sensor, not on plugin -->
      <update_rate>1</update_rate>
      <camera name="my_camera_sensor">
        <distortion>
          <k1>0.1</k1>
          <k2>0.2</k2>
          <k3>0.3</k3>
          <p1>0.4</p1>
          <p2>0.5</p2>
          <center>0.5 0.5</center>
        </distortion>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin">
        <ros>
          <namespace>custom_ns</namespace>
          <argument>custom_camera/image_raw:=custom_camera/custom_image</argument>
          <argument>custom_camera/image_depth:=custom_camera/custom_image_depth</argument>
          <argument>custom_camera/camera_info:=custom_camera/custom_info_raw</argument>
          <argument>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</argument>
          <argument>custom_camera/points:=custom_camera/custom_points</argument>
        </ros>
        <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
        <!-- <camera_name>custom_camera</camera_name> -->
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <!-- <frame_name>custom_frame</frame_name> -->
        <hack_baseline>0.07</hack_baseline>
        <!-- No need to repeat distortion parameters or to set autoDistortion -->
        <min_depth>0.001</min_depth>
        <max_depth>300.0</max_depth>
      </plugin>
    </sensor>
  </gazebo>
  <link name="ultra_link1">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="ultra_joint1" type="fixed">
    <parent link="base_link"/>
    <child link="ultra_link1"/>
    <origin xyz="0.625 0.149 0 "/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <link name="ultra_link2">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="ultra_joint2" type="fixed">
    <parent link="base_link"/>
    <child link="ultra_link2"/>
    <origin xyz="0.625 -0.149 0"/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <link name="ultra_link3">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="ultra_joint3" type="fixed">
    <parent link="base_link"/>
    <child link="ultra_link3"/>
    <origin xyz="-0.625 0.149 0"/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <link name="ultra_link4">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
      <material name="black"/>
    </visual>
    <!-- 碰撞检测设置 -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="1.3333333333333332e-06" ixy="0" ixz="0" iyy="1.3333333333333332e-06" iyz="0" izz="2.0000000000000003e-06"/>
    </inertial>
  </link>
  <joint name="ultra_joint4" type="fixed">
    <parent link="base_link"/>
    <child link="ultra_link4"/>
    <origin xyz="-0.625 -0.149 0"/>
    <!-- 设置关节旋转 -->
    <axis xyz="0 0 0"/>
  </joint>
  <!-- ～～～～～～～～～～～～～gazebo～～～～～～～～～～～～～～～～～ -->
  <gazebo reference="ultra_link1">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="ultra_link1">
    <sensor name="range_sensor1" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <!-- Using gazebo's noise instead of plugin's -->
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- Using gazebo's update rate instead of plugin's -->
      <update_rate>1</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="ultra_range_plugin1">
        <!-- Change namespace and output topic so published topic is /rrbot/laser/scan -->
        <ros>
          <!-- <namespace>/rrbot</namespace>
                        <argument>~/out:=range</argument> -->
          <remapping>~/out:=/range1</remapping>
        </ros>
        <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
        <output_type>sensor_msgs/Range</output_type>
        <!-- 关联到哪个link -->
        <frame_name>ultra_link1</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="ultra_link2">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="ultra_link2">
    <sensor name="range_sensor2" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <!-- Using gazebo's noise instead of plugin's -->
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- Using gazebo's update rate instead of plugin's -->
      <update_rate>1</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="ultra_range_plugin2">
        <!-- Change namespace and output topic so published topic is /rrbot/laser/scan -->
        <ros>
          <!-- <namespace>/rrbot</namespace>
                        <argument>~/out:=range</argument> -->
          <remapping>~/out:=/range2</remapping>
        </ros>
        <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
        <output_type>sensor_msgs/Range</output_type>
        <!-- 关联到哪个link -->
        <frame_name>ultra_link2</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="ultra_link3">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="ultra_link3">
    <sensor name="range_sensor3" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>3.054592653589793</min_angle>
            <max_angle>3.2285926535897933</max_angle>
            <!-- <min_angle>-0.087</min_angle>
                                <max_angle>0.087</max_angle> -->
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <!-- Using gazebo's noise instead of plugin's -->
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- Using gazebo's update rate instead of plugin's -->
      <update_rate>1</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="ultra_range_plugin3">
        <!-- Change namespace and output topic so published topic is /rrbot/laser/scan -->
        <ros>
          <!-- <namespace>/rrbot</namespace>
                        <argument>~/out:=range</argument> -->
          <remapping>~/out:=/range3</remapping>
        </ros>
        <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
        <output_type>sensor_msgs/Range</output_type>
        <!-- 关联到哪个link -->
        <frame_name>ultra_link3</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="ultra_link4">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="ultra_link4">
    <sensor name="range_sensor4" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>3.054592653589793</min_angle>
            <max_angle>3.2285926535897933</max_angle>
            <!-- <min_angle>-0.087</min_angle>
                                <max_angle>0.087</max_angle> -->
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.087</min_angle>
            <max_angle>0.087</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <!-- Using gazebo's noise instead of plugin's -->
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- Using gazebo's update rate instead of plugin's -->
      <update_rate>1</update_rate>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="ultra_range_plugin4">
        <!-- Change namespace and output topic so published topic is /rrbot/laser/scan -->
        <ros>
          <!-- <namespace>/rrbot</namespace>
                        <argument>~/out:=range</argument> -->
          <remapping>~/out:=/range4</remapping>
        </ros>
        <!-- Set output to sensor_msgs/Range to get same output type as gazebo_ros_range -->
        <output_type>sensor_msgs/Range</output_type>
        <!-- 关联到哪个link -->
        <frame_name>ultra_link4</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- 控制器 -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <!-- <ros>
                    <namespace>/fishbot</namespace>
                    <remapping>cmd_vel:=cmd_vel</remapping>
                    <remapping>odom:=odom</remapping>
                </ros> -->
      <remapping>/tf:=tf</remapping>
      <ros>
        <remapping>odom:=odom</remapping>
      </ros>
      <!-- wheels -->
      <left_joint>left2link</left_joint>
      <right_joint>right2link</right_joint>
      <!-- 车轮间距 -->
      <wheel_separation>1.476</wheel_separation>
      <!-- 车轮间距 -->
      <!-- 车轮直径 -->
      <wheel_diameter>0.2</wheel_diameter>
      <!-- 车轮直径 -->
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>0.5</max_wheel_acceleration>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
    <!-- 这个去掉貌似也没啥影响 -->
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="car_joint_state">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>left2link</joint_name>
      <joint_name>right2link</joint_name>
    </plugin>
  </gazebo>
</robot>

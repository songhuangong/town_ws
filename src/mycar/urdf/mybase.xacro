<?xml version="1.0"?>
<robot name="mycar" xmlns:xacro="http://ros.org/wiki/xacro"> 
    
    <!-- 地平面的位置   -->
    <link name="base_footprint">
    </link>

    <!-- 小车地盘相关参数 -->
    <xacro:property name="base_length" value="1.21" />
    <xacro:property name="base_width" value="0.738" />
    <xacro:property name="base_depth" value="0.35" />
    <xacro:property name="base_up" value="0.028" /> <!-- 小车地盘离地距离 -->
    <xacro:property name="base_center_up" value="${base_depth/2 + base_up}" /> <!-- 小车中心点离地距离 -->
    <xacro:property name="base_m" value="0.5" /> <!-- 地盘重量 -->


    <!-- 主动轮相关参数 -->
    <xacro:property name="main_wheel_radius" value="0.10"  />
    <xacro:property name="main_wheel_length" value="0.06" />
    <xacro:property name="main_wheel_m" value="0.1" />

    
    <!-- 从动轮相关参数 -->
    <xacro:property name="sub_wheel_radius" value="0.05"  />
    <xacro:property name="sub_wheel_length" value="0.055" />
    <xacro:property name="sub_wheel_m" value="0.1"  />


    <xacro:property name="wheel_offset_up" value="0.102"  />
    <xacro:property name="main_wheel_offset_left" value="0.039"  />
    <xacro:property name="sub_wheel_offset_left" value="0.091"  />

    <!-- base link 小车中心的位置-->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0.0" rpy="0 0 0"/>
            <geometry>
                <!-- <cylinder length="0.12" radius="0.10"/> -->
                <box size="${base_length} ${base_width} ${base_depth}"></box>
            </geometry>
            <material name="orange"/>
        </visual>
        <!-- 碰撞检测设置 -->
        <collision>
            <origin xyz="0 0 0.0" rpy="0 0 0"/>
            <geometry>
                <!-- <cylinder length="0.12" radius="0.10"/> -->
                <box size="${base_length} ${base_width} ${base_depth}"></box>
            </geometry>
        </collision>
        <!-- 惯性矩阵设置 -->
        <xacro:Box_inertial_matrix m="${base_m}" l="${base_length}" w="${base_width}" h="${base_depth}" />
    </link>

    <!-- 使小车距离地面上方0.05M -->
    <joint name="link2footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <!-- （base_link距离base_footprint的位置） =  车身一半高度（0.05） + 离地距离（0.05） -->
        <origin xyz="0 0 ${ base_depth / 2 + base_up }" />
    </joint>

    <!-- 主动轮宏实现 -->
    <xacro:macro name="add_main_wheel" params="name type">
        <link name="${name}_wheel">
            <visual>
                <!-- x方向翻转1.57.8弧度，及90度 -->
                <origin xyz="0 0 0" rpy="1.5708 0 0"/>
                <geometry>
                    <cylinder radius="${main_wheel_radius}" length="${main_wheel_length}"></cylinder>
                </geometry>
                <material name="grey"/>
            </visual>
            <!-- 碰撞检测设置 -->
            <collision>
                <origin xyz="0 0 0" rpy="1.5708 0 0"/>
                <geometry>
                    <cylinder radius="${main_wheel_radius}" length="${main_wheel_length}"></cylinder>
                </geometry>
            </collision>
            <!-- 惯性矩阵设置 -->
            <xacro:cylinder_inertial_matrix m="${main_wheel_m}" r="${main_wheel_radius}" h="${main_wheel_length}" />

        </link>

        <joint name="${name}2link" type="continuous">
            <parent link="base_link" />
            <child link="${name}_wheel" />
            <!-- X 方向：无偏移 
            Y 方向：车身宽度的一半
            Z 方向：baselink距离地面的高度 - 车轮半径 -->
            <xacro:if value="${type == 'left'}">
                <origin xyz="0 ${base_width/2 - main_wheel_offset_left} ${-(base_center_up - main_wheel_radius)}" />
            </xacro:if>
            <xacro:if value="${type == 'right'}">
                <origin xyz="0 ${-base_width/2 + main_wheel_offset_left} ${-(base_center_up - main_wheel_radius)}" />
            </xacro:if>


            <!-- 绕Y轴转动 -->
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>

    <!-- 添加主动轮 -->
    <xacro:add_main_wheel name="left" type="left"/>
    <xacro:add_main_wheel name="right" type="right"/>


    <!-- 万向轮宏实现 -->
    <xacro:macro name="add_sub_wheel" params="name pos">
        <link name="wheel${name}">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <!-- <geometry>
                    <cylinder radius="${sub_wheel_radius}" length="${sub_wheel_length}"></cylinder>
                </geometry> -->
                <geometry>
                    <sphere radius="${sub_wheel_radius}"/>
                </geometry>
                <material name="light_black"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${sub_wheel_radius}"/>
                </geometry>
            </collision>
            <!-- 惯性矩阵设置 -->
            <xacro:sphere_inertial_matrix m="${sub_wheel_m}" r="${sub_wheel_radius}" />

        </link>

        <joint name="wheel${name}_joint" type="continuous">
            <parent link="base_link" />
            <child link="wheel${name}" />
            <!-- 左上 -->
            <!-- <xacro:if value="${pos == 'q'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
            <!-- 右上 -->
            <!-- <xacro:if value="${pos == 'e'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${base_width/2 - sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
            <!-- 左下 -->
            <!-- <xacro:if value="${pos == 'z'}">
                <origin xyz="${base_length/2 - wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->
            <!-- 右下 -->
            <!-- <xacro:if value="${pos == 'c'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} ${-base_width/2 + sub_wheel_offset_left} ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if> -->

            <xacro:if value="${pos == 'z'}">
                <origin xyz="${base_length/2 - wheel_offset_up} 0 ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if>

            <xacro:if value="${pos == 'c'}">
                <origin xyz="${-base_length/2 + wheel_offset_up} 0 ${-(base_center_up - sub_wheel_radius)}" />
            </xacro:if>
            
            <axis xyz="0 1 1" />
        </joint>
        
    </xacro:macro>

    <!-- 四个万向轮实现 -->
    <!-- <xacro:add_sub_wheel name="1" pos="q"/> 
    <xacro:add_sub_wheel name="2" pos="e"/>  -->
    <xacro:add_sub_wheel name="3" pos="z"/> 
    <xacro:add_sub_wheel name="4" pos="c"/> 

    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>


</robot>